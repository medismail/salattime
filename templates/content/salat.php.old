<style>
#myProgress {
  width: 100%;
  height: 30px;
  background-color: #ddd;
}

#myBar {

<?php

require_once __DIR__ . '/../../lib/prayer-times-master/src/PrayerTimes/PrayerTimes.php';
require_once __DIR__ . '/../../lib/prayer-times-master/src/PrayerTimes/Method.php';
require_once __DIR__ . '/../../lib/prayer-times-master/src/PrayerTimes/DMath.php';
require_once __DIR__ . '/../../lib/prayer-times-moonsighting-master/src/MoonSighting/PrayerTimes.php';
require_once __DIR__ . '/../../lib/prayer-times-moonsighting-master/src/MoonSighting/Isha.php';

require_once __DIR__ . '/../../lib/hijri/hijri_date.php';

use IslamicNetwork\PrayerTimes\PrayerTimes;

// Instantiate the class with your chosen method, Juristic School for Asr and if you want or own Asr factor, make the juristic school null and pass your own Asr shadow factor as the third parameter. Note that all parameters are optional.

$pt = new PrayerTimes('MWL'); // new PrayerTimes($method, $asrJuristicMethod, $asrShadowFactor);

// Then, to get times for today.

$timezone = '+0100';
$latitude = 48;
$longitude = 2;

$times = $pt->getTimesForToday($latitude, $longitude, $timezone, $elevation = null, $latitudeAdjustmentMethod = PrayerTimes::LATITUDE_ADJUSTMENT_METHOD_ANGLE, $midnightMode = PrayerTimes::MIDNIGHT_MODE_STANDARD, $format = PrayerTimes::TIME_FORMAT_24H);

//echo "calendar: ", extension_loaded('calendar') ? 'OK' : 'MISSING', '<br>';
//$jd = gregoriantojd(10, 11, 1970);

// Or, if you want times for another day

//$date = new DateTime(null, new DateTimezone($timezone));
//$times = $pt->getTimes($date, $latitude, $longitude, $elevation = null, $latitudeAdjustmentMethod = PrayerTimes::LATITUDE_ADJUSTMENT_METHOD_ANGLE, $midnightMode = PrayerTimes::MIDNIGHT_MODE_STANDARD, $format = PrayerTimes::TIME_FORMAT_24H);
//$times = $pt->getTimes($date, $latitude, $longitude);

//If you would like to offset the time for each result by a particular number of minutes, simply call the tune method before calling getTimes or getTimesForToday.

//$pt->tune($imsak = 0, $fajr= 0, $sunrise = 0, $dhuhr = 0, $asr = 0, $maghrib = 0, $sunset = 0, $isha = 0, $midnight = 0);

// Finally, you can also create your own methods:
//$method = new Method('My Custom Method');
//$method->setFajrAngle(18);
//$method->setMaghribAngleOrMins(19.5);
//$method->setIshaAngleOrMins('90 min');
// And then:
//$pt = new PrayerTimes(PrayerTimes::METHOD_CUSTOM);
//$pt->setCustomMethod($method);
// And then the same as before:
//$times = $pt->getTimesForToday($latitude, $longitude, $timezone, $elevation = null, $latitudeAdjustmentMethod = self::LATITUDE_ADJUSTMENT_METHOD_ANGLE, $midnightMode = self::MIDNIGHT_MODE_STANDARD, $format = self::TIME_FORMAT_24H);

/*$diff_dhur = (int)((strtotime($times['Dhuhr'])-time()) / 60);
$minutes = (int)($diff_dhur % 60);
$hours = (int)($diff_dhur / 60) - 1;
echo "  width: " . $minutes . "%;";*/
echo "  height: 30px;
  background-color: #04AA6D;
}
</style>
<body>

<!--<h1>Salat Time</h1>-->";

//echo "<div id=\"myProgress\">";
//echo "<div id=\"myBar\"></div>";
//echo "</div>";
echo "<br>";
echo "<br>";

echo "<div>";

$next = $pt->getNextPrayer();
//echo "Next " . $hours . ":" . $minutes . '<br>';
echo "Next " . next['SALAT'] . next[REMAIN] . '<br>';

$hijri = new HijriDate();
//passing time
//$hijri = new HijriDate( 580060800 );
//or just
//$hijri = new HijriDate( strtotime('1987-11-23') );

echo "Date: ", $hijri->get_date(), '<br>';
//print_r($hijri->hijriWeekdays());
//$hijri->get_day(); //2
//$hijri->get_month(); //4
//$hijri->get_year(); //1408

//$hijri->get_month_name( 10 ); //syawal
//or from the date given
//$hijri->get_month_name( $hijri->get_month() );

//print_r($times);

echo "Fajr: ", $times['Fajr'], '<br>';
echo "Imsak: ", $times['Imsak'], '<br>';
echo "Sunrise: ", $times['Sunrise'], '<br>';
echo "Dhuhr: ", $times['Dhuhr'], '<br>';
echo "Asr: ", $times['Asr'], '<br>';
echo "Sunset: ", $times['Sunset'], '<br>';
echo "Maghrib: ", $times['Maghrib'], '<br>';
echo "Isha: ", $times['Isha'], '<br>';

echo "</div>";

?>

</body>
